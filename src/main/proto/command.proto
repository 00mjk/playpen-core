package net.thechunk.playpen.protocol;

option java_outer_classname = "Commands";

import "coordinator.proto";
import "p3.proto";

message Sync { // local -> network
    optional string name = 1;

    repeated Resource resources = 2;

    repeated string attributes = 3;

    repeated Server servers = 4;

    required bool enabled = 5 [default=false];
}

message Provision { // network -> local
    required Server server = 1;
}

message ProvisionResponse { // local -> network
    required bool ok = 1;
}

message PackageRequest { // local -> network
    required P3Meta p3 = 1;
}

message PackageResponse { // network -> local
    required bool ok = 1;
    optional PackageData data = 2;
}

message Deprovision { // network -> local
    required string uuid = 1;
    required bool force = 2 [default=false]; // if true, local should terminate the process without using shutdown steps
}

message ServerShutdown { // local -> network
    required string uuid = 1;
}

message BaseCommand {
    enum CommandType {
        SYNC = 1;
        PROVISION = 2;
        PROVISION_RESPONSE = 3;
        PACKAGE_REQUEST = 4;
        PACKAGE_RESPONSE = 5;
        DEPROVISION = 6;
        SERVER_SHUTDOWN = 7;
        SHUTDOWN = 8; // no command extension
    }

    required CommandType type = 1;

    optional Sync sync = 2;
    optional Provision provision = 3;
    optional ProvisionResponse provisionResponse = 4;
    optional PackageRequest packageRequest = 5;
    optional PackageResponse packageResponse = 6;
    optional Deprovision deprovision = 7;
    optional ServerShutdown serverShutdown = 8;
}